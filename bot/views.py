from django.shortcuts import HttpResponse
import telebot
from telebot import types  # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
from django.conf import settings
from .models import UsersBot
from main.models import MeterDev, Pokazaniya, PokazaniyaUser
from django.contrib.auth import get_user_model
from django.views.decorators.csrf import csrf_exempt

User = get_user_model()

bot = telebot.TeleBot(settings.BOT_TOKEN)

last_message_id = None
last_message_id_lst = []
##############################################
res_ls = int()
res_kv = int()


##############################################


@csrf_exempt
def index(request):
    bot.set_webhook('https://847a-31-29-225-89.ngrok-free.app/bot/')
    if request.method == "POST":
        update = telebot.types.Update.de_json(request.body.decode('utf-8'))
        bot.process_new_updates([update])

    return HttpResponse('<h1>–¢—ã –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è!</h1>')


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    global last_message_id
    global last_message_id_lst
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if last_message_id_lst:
        for lst in last_message_id_lst:
            try:
                bot.delete_message(call.message.chat.id, lst)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        last_message_id_lst.clear()

    # print(message.from_user)
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π user –∏ –ª–∏—Ü–µ–≤–æ–π
    user_bot = UsersBot.objects.filter(user_id=message.from_user.id)
    if user_bot:
        # id –µ—Å—Ç—å –≤ –±–∞–∑–µ
        keyboard = types.InlineKeyboardMarkup()
        for u_b in user_bot:
            # print(f'u_b:{u_b.ls}')
            btn_show_ls = types.InlineKeyboardButton(f"üè† {u_b.ls}-{u_b.kv}", callback_data=f'cal_show_ls'
                                                                                           f':{u_b.ls}')
            keyboard.add(btn_show_ls)

        btn_add_ls = types.InlineKeyboardButton("üîç –î–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", callback_data='call_add_ls')

        keyboard.add(btn_add_ls)
        sent_mess = bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç –∏–∑ —Å–ø–∏—Å–∫–∞, –ª–∏–±–æ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π',
                                     reply_markup=keyboard)
        last_message_id_lst.append(sent_mess.message_id)
    else:
        # id –ù–ï–¢ –≤ –±–∞–∑–µ
        keyboard = types.InlineKeyboardMarkup()
        btn_add_ls = types.InlineKeyboardButton("üîç –î–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", callback_data='call_add_ls')
        keyboard.add(btn_add_ls)
        sent_mess = bot.send_message(message.chat.id, f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤', reply_markup=keyboard)
        last_message_id_lst.append(sent_mess.message_id)


@bot.callback_query_handler(func=lambda call: True)
def handle_query(call):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
    data = call.data.split(':')
    action = data[0]
    global last_message_id
    global last_message_id_lst

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if last_message_id_lst:
        for lst in last_message_id_lst:
            try:
                bot.delete_message(call.message.chat.id, lst)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        last_message_id_lst.clear()

    if action == 'call_add_ls':
        bot.send_message(call.message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –Ω–µ –±–æ–ª–µ–µ 8 —Ü–∏—Ñ—Ä).')
    elif action == 'cal_show_ls':
        ls = data[1]
        bot.send_message(call.message.chat.id, f"–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—á—ë—Ç—á–∏–∫–æ–≤... –æ–∂–∏–¥–∞–π—Ç–µ.")
        try:
            user = User.objects.get(ls=ls)
            mes = (f"–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç ‚Ññ {ls}\n"
                   f"–ê–¥—Ä–µ—Å: {user.address}\n")

            keyboard = types.InlineKeyboardMarkup()
            # —Ü–∏–∫–ª –¥–ª—è —Å—á–µ—Ç—á–∏–∫–æ–≤
            # mes +=f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–±–æ—Ä —É—á–µ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞"
            mes += f"–ü—Ä–∏–±–æ—Ä—ã —É—á–µ—Ç–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Å –¢–°–ù"

            # bot.send_message(call.message.chat.id, "‚õî –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å—á–µ—Ç—á–∏–∫–æ–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Å –¢–°–ù")
            # btn_meter = types.InlineKeyboardButton("‚õî –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å—á–µ—Ç—á–∏–∫–æ–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Å –¢–°–ù", callback_data='r')
            # keyboard.add(btn_meter)
            btn_back = types.InlineKeyboardButton("‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –Ω–∞—á–∞–ª–æ", callback_data=f'call_all_ls:{ls}')
            btn_del = types.InlineKeyboardButton("‚ùå –û—Ç–≤—è–∑–∞—Ç—å —Å—á–µ—Ç", callback_data=f'call_del_ls:{ls}')
            keyboard.add(btn_back, btn_del)
            sent_mess = bot.send_message(call.message.chat.id, mes, reply_markup=keyboard)
            last_message_id_lst.append(sent_mess.message_id)

        except User.DoesNotExist:
            mes = f"–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç ‚Ññ {ls} –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            bot.send_message(call.message.chat.id, mes)
    elif action == 'call_all_ls':
        ls = data[1]
        # print(f'ls:{ls}')
        user_bot = UsersBot.objects.filter(ls=ls)
        if user_bot:
            # id –µ—Å—Ç—å –≤ –±–∞–∑–µ
            keyboard = types.InlineKeyboardMarkup()
            for u_b in user_bot:
                # print(f'u_b:{u_b.ls}')
                btn_show_ls = types.InlineKeyboardButton(f"üè† {u_b.ls}-{u_b.kv}", callback_data=f'cal_show_ls:{u_b.ls}')
                keyboard.add(btn_show_ls)

            btn_add_ls = types.InlineKeyboardButton("üîç –î–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", callback_data='call_add_ls')

            keyboard.add(btn_add_ls)
            sent_mess = bot.send_message(call.message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç –∏–∑ —Å–ø–∏—Å–∫–∞, –ª–∏–±–æ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π',
                                         reply_markup=keyboard)
            last_message_id_lst.append(sent_mess.message_id)
    elif action == 'call_del_ls':
        ls = data[1]
        try:
            user = User.objects.get(ls=ls)
        except User.DoesNotExist:
            mes = f"–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç ‚Ññ {ls} –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            bot.send_message(call.message.chat.id, mes)

        keyboard = types.InlineKeyboardMarkup()
        btn_yes = types.InlineKeyboardButton("–î–∞", callback_data=f'call_del_ls_yes:{ls}')
        btn_no = types.InlineKeyboardButton("–ù–µ—Ç", callback_data=f'cal_show_ls:{ls}')
        keyboard.add(btn_yes, btn_no)
        sent_mess = bot.send_message(call.message.chat.id, f'–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤—è–∑–∞—Ç—å –õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç?\n'
                                                           f'–°—á–µ—Ç ‚Ññ {ls}\n'
                                                           f'–ê–¥—Ä–µ—Å: {user.address}',
                                     reply_markup=keyboard)
        last_message_id_lst.append(sent_mess.message_id)
    elif action == 'call_del_ls_yes':
        ls = data[1]
        try:
            u = UsersBot.objects.get(ls=ls)
            u.delete()
            bot.send_message(call.message.chat.id, f'–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç ‚Ññ{ls} —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω!')
            keyboard = types.InlineKeyboardMarkup()
            btn_add_ls = types.InlineKeyboardButton("üîç –î–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", callback_data='call_add_ls')
            keyboard.add(btn_add_ls)
            sent_mess = bot.send_message(message.chat.id, f'–£ –≤–∞—Å –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ª–∏—Ü–µ–≤—ã—Ö —Å—á–µ—Ç–æ–≤',
                                         reply_markup=keyboard)
            last_message_id_lst.append(sent_mess.message_id)
        except UsersBot.DoesNotExist:
            mes = f"–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç ‚Ññ {ls} –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            bot.send_message(call.message.chat.id, mes)


@bot.message_handler(content_types=['text'])
def func(message):
    global res_ls
    global res_kv
    if len(message.text) == 8:
        try:
            res_ls = int(message.text)
            bot.send_message(message.chat.id,
                             text="–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã (–Ω–µ –±–æ–ª–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤).")
        except ValueError:
            bot.send_message(message.chat.id,
                             text="–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞ –µ—â–µ —Ä–∞–∑")
        # print(f'–ü–µ—Ä–µ–¥–∞–Ω –ª–∏—Ü–µ–≤–æ–π:{res_ls}')

    elif 1 <= len(message.text) <= 3:
        try:
            res_kv = int(message.text)
            # print(f'–ü–µ—Ä–µ–¥–∞–Ω–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞:{res_kv}')

        except ValueError:
            bot.send_message(message.chat.id,
                             text="–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã –µ—â–µ —Ä–∞–∑")

        if res_ls and res_kv:
            bot.send_message(message.chat.id, text="–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥—ë—Ç –ø–æ–∏—Å–∫ –∏ –ø—Ä–∏–≤—è–∑–∫–∞ –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞..")
            # print(f'LS:{res_ls}; KV:{res_kv};')
            u = User.objects.filter(ls=res_ls, kv=res_kv)

            if u:
                # –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º user –∏ –ª–∏—Ü–µ–≤–æ–π
                UsersBot.objects.create(user_id=message.from_user.id, username=message.from_user.username, ls=res_ls,
                                        kv=res_kv)
                bot.send_message(message.chat.id, text=f"–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç ‚Ññ{res_ls} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.")
                keyboard = types.InlineKeyboardMarkup()
                user_bot = UsersBot.objects.filter(user_id=message.from_user.id)
                for u_b in user_bot:
                    # print(f'u_b:{u_b.ls}')
                    btn_show_ls = types.InlineKeyboardButton(f"üè† {u_b.ls}-{u_b.kv}",
                                                             callback_data=f'cal_show_ls:{u_b.ls}')
                    keyboard.add(btn_show_ls)

                btn_add_ls = types.InlineKeyboardButton("üîç –î–æ–±–∞–≤–∏—Ç—å –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç", callback_data='call_add_ls')
                keyboard.add(btn_add_ls)
                sent_mess = bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –õ–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç –∏–∑ —Å–ø–∏—Å–∫–∞, –ª–∏–±–æ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π',
                                             reply_markup=keyboard)
                last_message_id_lst.append(sent_mess.message_id)

            else:
                bot.send_message(message.chat.id, text="–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –æ—Ñ–∏—Å –¢–°–ù")

    else:
        bot.send_message(message.chat.id, text="–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–∏—Ü–µ–≤–æ–≥–æ —Å—á–µ—Ç–∞ –µ—â–µ —Ä–∞–∑")
